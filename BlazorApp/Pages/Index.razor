@page "/"
@inject IConfiguration config
@using ChartJs.Blazor.BarChart
@using ChartJs.Blazor.PieChart
@using System.Drawing


<PageTitle>Index</PageTitle>

<HeaderPage Title="Dashboard"></HeaderPage>

<section class="dashboard">
    <article>
        <Chart Config="_configPie"></Chart>
    </article>
    <article>
        <Chart Config="_configBar" @ref="_chartBar"></Chart>
    </article>
</section>

@*<SurveyPrompt Title="How is Blazor working for you?" />*@

@code {
    public string title = "";
    private PieConfig _configPie;
    private BarConfig _configBar;
    private Chart _chartBar;
    private Random _rng = new Random();
    private const int InitalCount = 7;

    protected override void OnInitialized()
    {
        title = config.GetValue<string>("helloMessage");

        _configPie = new PieConfig
            {
                Options = new PieOptions
                {
                    Responsive = true,
                    Title = new OptionsTitle
                    {
                        Display = true,
                        Text = "ChartJs.Blazor Pie Chart"
                    }
                }
            };

        foreach (string color in new[] { "Red", "Yellow", "Green", "Blue" })
        {
            _configPie.Data.Labels.Add(color);
        }

        PieDataset<int> dataset = new PieDataset<int>(new[] { 6, 5, 3, 7 })
            {
                BackgroundColor = new[]
                            {
            ColorUtil.ColorHexString(255, 99, 132), // Slice 1 aka "Red"
            ColorUtil.ColorHexString(255, 205, 86), // Slice 2 aka "Yellow"
            ColorUtil.ColorHexString(75, 192, 192), // Slice 3 aka "Green"
            ColorUtil.ColorHexString(54, 162, 235), // Slice 4 aka "Blue"
        }
            };

        _configPie.Data.Datasets.Add(dataset);

        _configBar = new BarConfig(horizontal: true)
            {
                Options = new BarOptions
                {
                    Responsive = true,
                    Legend = new Legend
                    {
                        Position = Position.Right
                    },
                    Title = new OptionsTitle
                    {
                        Display = true,
                        Text = "ChartJs.Blazor Horizontal Bar Chart"
                    }
                }
            };

        IDataset<int> dataset1 = new BarDataset<int>(RandomScalingFactor(InitalCount), horizontal: true)
            {
                Label = "My first dataset",
                BackgroundColor = ColorUtil.FromDrawingColor(Color.FromArgb(128, ChartColors.Red)),
                BorderColor = ColorUtil.FromDrawingColor(ChartColors.Red),
                BorderWidth = 1
            };

        IDataset<int> dataset2 = new BarDataset<int>(RandomScalingFactor(InitalCount), horizontal: true)
            {
                Label = "My second dataset",
                BackgroundColor = ColorUtil.FromDrawingColor(Color.FromArgb(128, ChartColors.Blue)),
                BorderColor = ColorUtil.FromDrawingColor(ChartColors.Blue),
                BorderWidth = 1
            };

        //_configBar.Data.Labels.AddRange(Months.Take(InitalCount));
        _configBar.Data.Datasets.Add(dataset1);
        _configBar.Data.Datasets.Add(dataset2);
    }


    private void RandomizeData()
    {
        foreach (IDataset<int> dataset in _configBar.Data.Datasets)
        {
            int count = dataset.Count;
            dataset.Clear();
            for (int i = 0; i < count; i++)
            {
                if (_rng.NextDouble() < 0.2)
                {
                    dataset.Add(0);
                }
                else
                {
                    dataset.Add(RandomScalingFactor());
                }
            }
        }

        _chartBar.Update();
    }

}